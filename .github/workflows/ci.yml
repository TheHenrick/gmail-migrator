name: Gmail Migrator CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml', '**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.5
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached virtual environment
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            venv-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-
            venv-${{ runner.os }}-py${{ matrix.python-version }}-

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: Cache pytest results
        uses: actions/cache@v4
        with:
          path: .pytest_cache
          key: pytest-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            pytest-${{ runner.os }}-py${{ matrix.python-version }}-

      - name: Check Poetry configuration
        run: poetry check

      - name: Format check
        run: poetry run ruff format --check .

      - name: Lint check
        run: poetry run ruff check .

      - name: Run tests
        run: poetry run pytest
        env:
          DEBUG: "True"
          GMAIL_CLIENT_ID: ${{ secrets.GMAIL_CLIENT_ID || 'test_client_id' }}
          GMAIL_CLIENT_SECRET: ${{ secrets.GMAIL_CLIENT_SECRET || 'test_client_secret' }}
          GMAIL_REDIRECT_URI: ${{ secrets.GMAIL_REDIRECT_URI || 'http://localhost:8000/auth/callback' }}

  build-docker:
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: gmail-migrator:latest
          cache-from: |
            type=local,src=/tmp/.buildx-cache
            type=gha
          cache-to: |
            type=local,dest=/tmp/.buildx-cache-new,mode=max
            type=gha,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
